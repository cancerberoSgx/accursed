// // Generated by CoffeeScript 2.4.1
// // (function() {
//   // line
//   // var Line;

//   import {cell} from './cell'
// import { Point } from './lines';

// // class Line{
// //     protected from: any[]
// //     protected to: any[]
// //     protected style: string
// //     protected color: any

// //     constructor(options:Options={}) {

// //       var base: { foreground?: string; }, base1: { background?: string; }, ref: { length: any; }, ref1: { length: any; };

// //       this.from =   options.from ||  this.from
// //       this.to =   options.to||this.to
// //       this.style =   options.style ||  this.style
// //       this.color =   options.from ||  this.color
// //       // this.from =  this.from || options.from

// // // {      this.from}  = {...options}
// //       // if (arguments.length === 1) {
// //         // ({from: this.from, to: this.to, style: this.style, color: this.color} = options);
// //       // } else {
// //       //   this.from = arguments[0];
// //       //   this.to = arguments[1];
// //       //   this.style = arguments[2];
// //       //   this.color = {};
// //       //   this.color.foreground = arguments[3];
// //       //   this.color.background = arguments[4];
// //       // }
// //       // if (!(this instanceof Line)) {
// //       //   return new Line({from: this.from, to: this.to, style: this.style, color: this.color});
// //       // }
// //       if (((ref = this.from) != null ? ref.length : void 0) !== 2) {
// //         throw new Error("from coordinates required");
// //       }
// //       if (((ref1 = this.to) != null ? ref1.length : void 0) !== 2) {
// //         throw new Error("to coordinates required");
// //       }
// //       if (!(this.vertical || this.horizontal)) {
// //         throw new Error("coordinates must be collinear");
// //       }
// //       if (this.vertical && this.horizontal) {
// //         throw new Error("coordinates must not be coincident");
// //       }
// //       if (this.style == null) {
// //         this.style = "normal";
// //       }
// //       if (this.color == null) {
// //         this.color = {};
// //       }
// //       if ((base = this.color).foreground == null) {
// //         base.foreground = "none";
// //       }
// //       if ((base1 = this.color).background == null) {
// //         base1.background = "none";
// //       }
// //     }

// //     horizontal() {
// //       return this.from[1] === this.to[1];
// //     }

// //     vertical() {
// //       return this.from[0] === this.to[0];
// //     }

// //   };

// export interface LineOptions { from?: any[]; to?: any; style?: string; color?: any; }

// export interface Line {
//   readonly from?: Point
//    readonly to?: Point
//    readonly style?: string;
//    readonly color?: any; }
// //  export  type Line =// ((options?:LineOptions)=>ILine) &
// //  {

// //  readonly vertical?: boolean
// //  readonly horizontal?: boolean
// //   } & LineBase
//   // module.exports = Line;

// // }).call(this);
// export function line(options:LineOptions={}): Line {

//   // var base: { foreground?: string; }, base1: { background?: string; }, ref: { length: any; }, ref1: { length: any; };

//   const from =   options.from ||  this.from
//   const to =   options.to||this.to
//   let style =   options.style ||  this.style||'normal'
//   const color =   options.color ||  this.color||{}
//   // this.from =  this.from || options.from

// // {      this.from}  = {...options}
//   // if (arguments.length === 1) {
//     // ({from: this.from, to: this.to, style: this.style, color: this.color} = options);
//   // } else {
//   //   this.from = arguments[0];
//   //   this.to = arguments[1];
//   //   this.style = arguments[2];
//   //   this.color = {};
//   //   this.color.foreground = arguments[3];
//   //   this.color.background = arguments[4];
//   // }
//   // if (!(this instanceof Line)) {
//   //   return new Line({from: this.from, to: this.to, style: this.style, color: this.color});
//   // }

// //   unless @from?.length is 2
// //   throw new Error "from coordinates required"
// // unless @to?.length is 2
// //   throw new Error "to coordinates required"
// // unless @vertical() or @horizontal()
// //   throw new Error "coordinates must be collinear"
// // if @vertical() and @horizontal()
// //   throw new Error "coordinates must not be coincident"

// const vertical = from[0] === to[0]
// const horizontal =  from[1] === to[1]

//       if (!(this instanceof Line)) {
//         //@ts-ignore
//         return new Line({from: this.from, to: this.to, style: this.style, color: this.color});
//       }
//   if (from.length !== 2) {
//     throw new Error("from coordinates required");
//   }
//   if (to.length !== 2) {
//     throw new Error("to coordinates required");
//   }
//   if (!(vertical || horizontal)) {
//     throw new Error("coordinates must be collinear");
//   }
//   if (vertical && horizontal) {
//     throw new Error("coordinates must not be coincident");
//   }
//   // if (style == null) {
//   //   style = "normal";
//   // }
//   // if (color == null) {
//   //   color = {};
//   // }
//   color.foreground = color.foreground || 'none'
//   color.background = color.background || 'none'

//   // if (color.foreground == null) {
//   //   base.foreground = "none";
//   // }

//   // if ((base1 = this.color).background == null) {
//   //   base1.background = "none";
//   // }
//   // return Object.assign(line, {  from, to, style, color
//     // , vertical, horizontal
//   // })
//   return {  from, to, style, color}
//   }

// //     horizontal() {
// //       return this.from[1] === this.to[1];
// //     }

// //     vertical() {
// //       return this.from[0] === this.to[0];
// //     }
//     // }

// //     // Generated by CoffeeScript 2.4.1
// // (function() {
// //   // line
// //   var Line;

// //   Line = class Line {
// //     constructor() {
// //       var base, base1, ref, ref1;
// //       if (arguments.length === 1) {
// //         ({from: this.from, to: this.to, style: this.style, color: this.color} = arguments[0]);
// //       } else {
// //         this.from = arguments[0];
// //         this.to = arguments[1];
// //         this.style = arguments[2];
// //         this.color = {};
// //         this.color.foreground = arguments[3];
// //         this.color.background = arguments[4];
// //       }
// //       if (!(this instanceof Line)) {
// //         //@ts-ignore
// //         return new Line({from: this.from, to: this.to, style: this.style, color: this.color});
// //       }
// //       if (((ref = this.from) != null ? ref.length : void 0) !== 2) {
// //         throw new Error("from coordinates required");
// //       }
// //       if (((ref1 = this.to) != null ? ref1.length : void 0) !== 2) {
// //         throw new Error("to coordinates required");
// //       }
// //       if (!(this.vertical() || this.horizontal())) {
// //         throw new Error("coordinates must be collinear");
// //       }
// //       if (this.vertical() && this.horizontal()) {
// //         throw new Error("coordinates must not be coincident");
// //       }
// //       if (this.style == null) {
// //         this.style = "normal";
// //       }
// //       if (this.color == null) {
// //         this.color = {};
// //       }
// //       if ((base = this.color).foreground == null) {
// //         base.foreground = "none";
// //       }
// //       if ((base1 = this.color).background == null) {
// //         base1.background = "none";
// //       }
// //     }

// //     horizontal() {
// //       return this.from[1] === this.to[1];
// //     }

// //     vertical() {
// //       return this.from[0] === this.to[0];
// //     }

// //   };

// //   module.exports = (...args)=>Line;

// // }).call(this);
